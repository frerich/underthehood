{"version":3,"file":"xterm.js","mappings":"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,CAAC,IAAQ,KAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAA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","sources":["webpack://xterm/webpack/universalModuleDefinition","webpack://xterm/./src/browser/AccessibilityManager.ts","webpack://xterm/./src/browser/Clipboard.ts","webpack://xterm/./src/browser/Color.ts","webpack://xterm/./src/browser/ColorContrastCache.ts","webpack://xterm/./src/browser/ColorManager.ts","webpack://xterm/./src/browser/Dom.ts","webpack://xterm/./src/browser/Lifecycle.ts","webpack://xterm/./src/browser/Linkifier.ts","webpack://xterm/./src/browser/Linkifier2.ts","webpack://xterm/./src/browser/LocalizableStrings.ts","webpack://xterm/./src/browser/MouseZoneManager.ts","webpack://xterm/./src/browser/RenderDebouncer.ts","webpack://xterm/./src/browser/ScreenDprMonitor.ts","webpack://xterm/./src/browser/Terminal.ts","webpack://xterm/./src/browser/TimeBasedDebouncer.ts","webpack://xterm/./src/browser/Viewport.ts","webpack://xterm/./src/browser/input/CompositionHelper.ts","webpack://xterm/./src/browser/input/Mouse.ts","webpack://xterm/./src/browser/input/MoveToCell.ts","webpack://xterm/./src/browser/public/Terminal.ts","webpack://xterm/./src/browser/renderer/BaseRenderLayer.ts","webpack://xterm/./src/browser/renderer/CursorRenderLayer.ts","webpack://xterm/./src/browser/renderer/CustomGlyphs.ts","webpack://xterm/./src/browser/renderer/GridCache.ts","webpack://xterm/./src/browser/renderer/LinkRenderLayer.ts","webpack://xterm/./src/browser/renderer/Renderer.ts","webpack://xterm/./src/browser/renderer/RendererUtils.ts","webpack://xterm/./src/browser/renderer/SelectionRenderLayer.ts","webpack://xterm/./src/browser/renderer/TextRenderLayer.ts","webpack://xterm/./src/browser/renderer/atlas/BaseCharAtlas.ts","webpack://xterm/./src/browser/renderer/atlas/CharAtlasCache.ts","webpack://xterm/./src/browser/renderer/atlas/CharAtlasUtils.ts","webpack://xterm/./src/browser/renderer/atlas/Constants.ts","webpack://xterm/./src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack://xterm/./src/browser/renderer/atlas/LRUMap.ts","webpack://xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xterm/./src/browser/selection/SelectionModel.ts","webpack://xterm/./src/browser/services/CharSizeService.ts","webpack://xterm/./src/browser/services/CharacterJoinerService.ts","webpack://xterm/./src/browser/services/CoreBrowserService.ts","webpack://xterm/./src/browser/services/DecorationService.ts","webpack://xterm/./src/browser/services/MouseService.ts","webpack://xterm/./src/browser/services/RenderService.ts","webpack://xterm/./src/browser/services/SelectionService.ts","webpack://xterm/./src/browser/services/Services.ts","webpack://xterm/./src/browser/services/SoundService.ts","webpack://xterm/./src/common/CircularList.ts","webpack://xterm/./src/common/Clone.ts","webpack://xterm/./src/common/CoreTerminal.ts","webpack://xterm/./src/common/EventEmitter.ts","webpack://xterm/./src/common/InputHandler.ts","webpack://xterm/./src/common/Lifecycle.ts","webpack://xterm/./src/common/Platform.ts","webpack://xterm/./src/common/TypedArrayUtils.ts","webpack://xterm/./src/common/WindowsMode.ts","webpack://xterm/./src/common/buffer/AttributeData.ts","webpack://xterm/./src/common/buffer/Buffer.ts","webpack://xterm/./src/common/buffer/BufferLine.ts","webpack://xterm/./src/common/buffer/BufferRange.ts","webpack://xterm/./src/common/buffer/BufferReflow.ts","webpack://xterm/./src/common/buffer/BufferSet.ts","webpack://xterm/./src/common/buffer/CellData.ts","webpack://xterm/./src/common/buffer/Constants.ts","webpack://xterm/./src/common/buffer/Marker.ts","webpack://xterm/./src/common/data/Charsets.ts","webpack://xterm/./src/common/data/EscapeSequences.ts","webpack://xterm/./src/common/input/Keyboard.ts","webpack://xterm/./src/common/input/TextDecoder.ts","webpack://xterm/./src/common/input/UnicodeV6.ts","webpack://xterm/./src/common/input/WriteBuffer.ts","webpack://xterm/./src/common/input/XParseColor.ts","webpack://xterm/./src/common/parser/Constants.ts","webpack://xterm/./src/common/parser/DcsParser.ts","webpack://xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://xterm/./src/common/parser/OscParser.ts","webpack://xterm/./src/common/parser/Params.ts","webpack://xterm/./src/common/public/AddonManager.ts","webpack://xterm/./src/common/public/BufferApiView.ts","webpack://xterm/./src/common/public/BufferLineApiView.ts","webpack://xterm/./src/common/public/BufferNamespaceApi.ts","webpack://xterm/./src/common/public/ParserApi.ts","webpack://xterm/./src/common/public/UnicodeApi.ts","webpack://xterm/./src/common/services/BufferService.ts","webpack://xterm/./src/common/services/CharsetService.ts","webpack://xterm/./src/common/services/CoreMouseService.ts","webpack://xterm/./src/common/services/CoreService.ts","webpack://xterm/./src/common/services/DirtyRowService.ts","webpack://xterm/./src/common/services/InstantiationService.ts","webpack://xterm/./src/common/services/LogService.ts","webpack://xterm/./src/common/services/OptionsService.ts","webpack://xterm/./src/common/services/ServiceRegistry.ts","webpack://xterm/./src/common/services/Services.ts","webpack://xterm/./src/common/services/UnicodeService.ts","webpack://xterm/webpack/bootstrap","webpack://xterm/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\nimport { IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    switch (css.length) {\n      case 7: // #rrggbb\n        return {\n          css,\n          rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n        };\n      case 9: // #rrggbbaa\n        return {\n          css,\n          rgba: parseInt(css.slice(1), 16) >>> 0\n        };\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { ColorIndex } from 'common/Types';\n\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this.colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this.colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this.colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this.colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this.colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this.colors.foreground,\n      background: this.colors.background,\n      cursor: this.colors.cursor,\n      ansi: [...this.colors.ansi]\n    };\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    // Cannot use window.setTimeout since tests need to run in node\n    this._rowsTimeoutId = setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency) as any as number;\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'click', this._onClick.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    });\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _onClick(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedBufferChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.rawOptions.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService, IDecorationService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'browser/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'browser/services/DecorationService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  public decorationService: IDecorationService;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.decorationService = this.register(this._instantiationService.createInstance(DecorationService));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._colorManager) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi' | undefined = undefined;\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      if (acc) {\n        switch (req.type) {\n          case ColorRequestType.REPORT:\n            const channels = color.toColorRGB(acc === 'ansi'\n              ? this._colorManager.colors.ansi[req.index]\n              : this._colorManager.colors[acc]);\n            this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C0.BEL}`);\n            break;\n          case ColorRequestType.SET:\n            if (acc === 'ansi') this._colorManager.colors.ansi[req.index] = rgba.toColor(...req.color);\n            else this._colorManager.colors[acc] = rgba.toColor(...req.color);\n            break;\n          case ColorRequestType.RESTORE:\n            this._colorManager.restoreColor(req.index);\n            break;\n        }\n      }\n    }\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.rawOptions.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.rawOptions.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedBufferChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea,\n      this.element\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n\n    this.decorationService.attachToDom(this.screenElement, this._renderService, this._bufferService);\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this.decorationService!.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (event.key === 'Dead' || event.key === 'AltGraph') {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.rawOptions.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    if (ev.data && ev.inputType === 'insertText' && !ev.composed && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService?.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _lastHadScrollBar: boolean = false;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    private readonly _element: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this._lastHadScrollBar = true;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    // Update scroll bar width\n    if (this._optionsService.rawOptions.scrollback === 0) {\n      this.scrollBarWidth = 0;\n    } else {\n      this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    }\n    this._lastHadScrollBar = this.scrollBarWidth > 0;\n\n    const elementStyle = window.getComputedStyle(this._element);\n    const elementPadding = parseInt(elementStyle.paddingLeft) + parseInt(elementStyle.paddingRight);\n    this._viewportElement.style.width = (this._renderService.dimensions.actualCellWidth * (this._bufferService.cols) + this.scrollBarWidth + (this._lastHadScrollBar ? elementPadding : 0)).toString() + 'px';\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the scroll bar visibility changed\n    if (this._lastHadScrollBar !== (this._optionsService.rawOptions.scrollback > 0)) {\n      this._refresh(immediate);\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, FontWeight, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: ITerminalOptions;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): ITerminalOptions {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._checkReadonlyOptions(key);\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.rawOptions, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clear();\n  }\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n     * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n     * existing fillStyle on the context.\n     * @param x The column to fill.\n     * @param y The row to fill.\n     */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._scaledCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - cellOffset - window.devicePixelRatio,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas?.draw(this._ctx, this._currentGlyphIdentifier, x * this._scaledCellWidth + this._scaledCharLeft, y * this._scaledCellHeight + this._scaledCharTop);\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = TEXT_BASELINE;\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n\n    this._ctx.restore();\n  }\n\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.rawOptions.fontWeightBold : this._optionsService.rawOptions.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.rawOptions.fontSize * window.devicePixelRatio}px ${this._optionsService.rawOptions.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.rawOptions.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n  }\n\n  public dispose(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    super.dispose();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n    this.onOptionsChanged();\n  }\n\n  public onBlur(): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    this._cursorBlinkStateManager?.resume();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.rawOptions.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.rawOptions.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.rawOptions.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.rawOptions.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.rawOptions.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.substr(1, 2), 16);\n      g = parseInt(fillStyle.substr(3, 2), 16);\n      b = parseInt(fillStyle.substr(5, 2), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.substr(7, 2), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset;\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecorationOptions, IDecoration } from 'xterm';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.rawOptions.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    for (const layer of this._renderLayers) {\n      layer.clearTextureAtlas();\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline() || cell.isStrikethrough()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        if (cell.isStrikethrough()) {\n          this._fillMiddleLineAtCells(x, y, cell.getWidth());\n        }\n        if (cell.isUnderline()) {\n          this._fillBottomLineAtCells(x, y, cell.getWidth());\n        }\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.rawOptions.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  public clear(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IPartialColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: [...colors.ansi]\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public clear(): void {\n    if (this._cacheMap.size > 0) {\n      const capacity = this._width * this._height;\n      this._cacheMap = new LRUMap(capacity);\n      this._cacheMap.prealloc(capacity);\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._tmpCtx.clearRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    let imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // If this charcater is underscore and empty, shift it up until it is visible, try for a maximum\n    // of 5 pixels.\n    if (isEmpty && glyph.chars === '_' && !this._config.allowTransparency) {\n      for (let offset = 1; offset <= 5; offset++) {\n        // Draw the character\n        this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight - offset);\n\n        // clear the background from the character to avoid issues with drawing over the previous\n        // character if it extends past it's bounds\n        imageData = this._tmpCtx.getImageData(\n          0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n        );\n        isEmpty = clearColor(imageData, backgroundColor);\n        if (!isEmpty) {\n          break;\n        }\n      }\n    }\n\n    this._tmpCtx.restore();\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e));\n\n    this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionTransparent.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDecorationService, IRenderService } from 'browser/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService } from 'common/services/Services';\nimport { IDecorationOptions, IDecoration, IMarker } from 'xterm';\n\nexport class DecorationService extends Disposable implements IDecorationService {\n\n  private readonly _decorations: Decoration[] = [];\n  private _container: HTMLElement | undefined;\n  private _screenElement: HTMLElement | undefined;\n  private _renderService: IRenderService | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(@IInstantiationService private readonly _instantiationService: IInstantiationService) { super(); }\n\n  public attachToDom(screenElement: HTMLElement, renderService: IRenderService): void {\n    this._renderService = renderService;\n    this._screenElement = screenElement;\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    screenElement.appendChild(this._container);\n    this.register(this._renderService.onRenderedBufferChange(() => this.refresh()));\n    this.register(this._renderService.onDimensionsChange(() => this.refresh(true)));\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    if (decorationOptions.marker.isDisposed || !this._container) {\n      return undefined;\n    }\n    const decoration = this._instantiationService.createInstance(Decoration, decorationOptions, this._container);\n    this._decorations.push(decoration);\n    decoration.onDispose(() => this._decorations.splice(this._decorations.indexOf(decoration), 1));\n    this._queueRefresh();\n    return decoration;\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = window.requestAnimationFrame(() => {\n      this.refresh();\n      this._animationFrame = undefined;\n    });\n  }\n\n  public refresh(shouldRecreate?: boolean): void {\n    if (!this._renderService) {\n      return;\n    }\n    for (const decoration of this._decorations) {\n      decoration.render(this._renderService, shouldRecreate);\n    }\n  }\n\n  public dispose(): void {\n    for (const decoration of this._decorations) {\n      decoration.dispose();\n    }\n    if (this._screenElement && this._container && this._screenElement.contains(this._container)) {\n      this._screenElement.removeChild(this._container);\n    }\n  }\n}\nexport class Decoration extends Disposable implements IDecoration {\n  private readonly _marker: IMarker;\n  private _element: HTMLElement | undefined;\n\n  public isDisposed: boolean = false;\n\n  public get element(): HTMLElement | undefined { return this._element; }\n  public get marker(): IMarker { return this._marker; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  private _onRender = new EventEmitter<HTMLElement>();\n  public get onRender(): IEvent<HTMLElement> { return this._onRender.event; }\n\n  public x: number;\n  public anchor: 'left' | 'right';\n  public width: number;\n  public height: number;\n\n  constructor(\n    options: IDecorationOptions,\n    private readonly _container: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.x = options.x ?? 0;\n    this._marker = options.marker;\n    this._marker.onDispose(() => this.dispose());\n    this.anchor = options.anchor || 'left';\n    this.width = options.width || 1;\n    this.height = options.height || 1;\n  }\n\n  public render(renderService: IRenderService, shouldRecreate?: boolean): void {\n    if (!this._element || shouldRecreate) {\n      this._createElement(renderService, shouldRecreate);\n    }\n    if (this._container && this._element && !this._container.contains(this._element)) {\n      this._container.append(this._element);\n    }\n    this._refreshStyle(renderService);\n    if (this._element) {\n      this._onRender.fire(this._element);\n    }\n  }\n\n  private _createElement(renderService: IRenderService, shouldRecreate?: boolean): void {\n    if (shouldRecreate && this._element && this._container.contains(this._element)) {\n      this._container.removeChild(this._element);\n    }\n    this._element = document.createElement('div');\n    this._element.classList.add('xterm-decoration');\n    this._element.style.width = `${this.width * renderService.dimensions.actualCellWidth}px`;\n    this._element.style.height = `${this.height * renderService.dimensions.actualCellHeight}px`;\n    this._element.style.top = `${(this.marker.line - this._bufferService.buffers.active.ydisp) * renderService.dimensions.actualCellHeight}px`;\n    this._element.style.lineHeight = `${renderService.dimensions.actualCellHeight}px`;\n\n    if (this.x && this.x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      this._element.style.display = 'none';\n    }\n    if (this.anchor === 'right') {\n      this._element.style.right = this.x ? `${this.x * renderService.dimensions.actualCellWidth}px` : '';\n    } else {\n      this._element.style.left = this.x ? `${this.x * renderService.dimensions.actualCellWidth}px` : '';\n    }\n  }\n\n  private _refreshStyle(renderService: IRenderService): void {\n    if (!this._element) {\n      return;\n    }\n    const line = this.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line > this._bufferService.rows) {\n      // outside of viewport\n      this._element.style.display = 'none';\n    } else {\n      this._element.style.top = `${line * renderService.dimensions.actualCellHeight}px`;\n      this._element.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }\n  }\n\n  public override dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    if (this._element && this._container.contains(this._element)) {\n      this._container.removeChild(this._element);\n    }\n    this.isDisposed = true;\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncer } from 'browser/Types';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedBufferChange(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRender.fire({ start, end });\n    }\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\nimport { IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferService } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedBufferChange: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  refresh(): void;\n  attachToDom(screenElement: HTMLElement, renderService: IRenderService, bufferService: IBufferService): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.rawOptions.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum, ITerminalOptions } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource, ITerminalOptions as IPublicTerminalOptions } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.rawOptions.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n          ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.rawOptions.cursorStyle];\n        style -= this._optionsService.rawOptions.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSendFocus = new EventEmitter<void>();\n  public get onRequestSendFocus(): IEvent<void> { return this._onRequestSendFocus.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onColor = new EventEmitter<IColorEvent>();\n  public get onColor(): IEvent<IColorEvent> { return this._onColor.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   * @param cleanWrap clear the isWrapped flag\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()));\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public clearMarkers(y?: number): void {\n    this._isClearing = true;\n    if (y !== undefined) {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (this.markers[i].line === y) {\n          this.markers[i].dispose();\n          this.markers.splice(i--, 1);\n        }\n      }\n    } else {\n      for (const marker of this.markers) {\n        marker.dispose();\n      }\n      this.markers = [];\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f]{1})\\/([\\da-f]{1})\\/([\\da-f]{1})$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\nexport const DEFAULT_OPTIONS: Readonly<ITerminalOptions> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  bellSound: DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: ITerminalOptions;\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: Partial<ITerminalOptions>) {\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    this.options[key] = value;\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Readonly<ITerminalOptions>;\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  convertEol: boolean;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  customGlyphs: boolean;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4389);\n"],"names":["root","factory","exports","module","define","amd","a","i","self","_terminal","_renderService","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_onBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","char","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","onKey","_onKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","window","dispose","removeElementFromParent","this","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","actualCellHeight","style","height","Disposable","AccessibilityManager","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","channels","rgb","rgba","toPaddedHex","c","s","contrastRatio","l1","l2","toCss","r","g","b","undefined","toRgba","color","blend","bg","fg","css","fgR","fgG","fgB","bgR","bgG","bgB","Math","round","isOpaque","ensureContrastRatio","ratio","result","toColor","opaque","rgbaColor","toChannels","opacity","toColorRGB","parseInt","slice","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","max","ceil","increaseLuminance","min","bgL","fgL","_color","_rgba","clear","setCss","getCss","setColor","getColor","ColorContrastCache","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","foreground","background","cursor","cursorAccent","selectionTransparent","selectionOpaque","ansi","contrastCache","_updateRestoreColors","onOptionsChange","setTheme","theme","_parseColor","selection","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","restoreColor","slot","_restoreColors","fallback","fillStyle","console","warn","fillRect","data","getImageData","substring","split","map","component","Number","alpha","ColorManager","elements","parentElement","node","type","handler","options","disposed","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","event","attachToDom","mouseZoneManager","_element","_mouseZoneManager","linkifyRows","clearAll","_rowsTimeoutId","clearTimeout","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","cols","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","registerLinkMatcher","regex","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","deregisterLinkMatcher","matcherId","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","indexOf","lastIndex","bufferIndex","stringIndexToBufferIndex","line","get","attr","getFg","isValid","_addLink","exec","x","y","getStringCellWidth","x1","y1","floor","x2","y2","MouseZone","newWindow","open","opener","location","href","fire","_createLinkHoverEvent","remove","IBufferService","ILogService","IUnicodeService","clickCallback","hoverCallback","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","_currentLink","registerLinkProvider","linkProvider","providerIndex","mouseService","renderService","_mouseService","_clearCurrentLink","_onMouseMove","_onClick","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","_checkLinkProviderResult","provideLinks","links","linksWithState","set","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedBufferChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","Linkifier2","promptLabel","_screenElement","_selectionService","_optionsService","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","_deactivate","zone","_activate","_currentZone","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","rawOptions","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","IMouseService","ISelectionService","IOptionsService","MouseZoneManager","_renderCallback","_animationFrame","cancelAnimationFrame","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","RenderDebouncer","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","browser","Browser","_keyDownHandled","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","linkifier2","decorationService","DecorationService","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","onCursorMove","onTitleChange","_afterResize","_colorManager","req","acc","ident","C0","ESC","toRgbString","BEL","setColors","viewport","onThemeChange","_isDisposed","_customKeyEventHandler","write","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","optionsService","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","actualCellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","setService","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","RenderService","IRenderService","resize","_compositionView","CompositionHelper","_soundService","SoundService","ISoundService","MouseService","Viewport","amount","onRequestSyncScrollBar","onFocus","SelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","onMouseDown","coreMouseService","areMouseEventsActive","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","normal","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","startColumn","selectionStart","endColumn","selectionEnd","clearSelection","selectAll","selectLines","keydown","scrollToBottom","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","ETX","CR","domEvent","thirdLevelKey","metaKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","_soundBell","playBellSound","hasValidSize","clearMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","_visualBell","bellStyle","CoreTerminal","Terminal","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_currentScaledCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_lastHadScrollBar","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","scrollback","elementStyle","getComputedStyle","elementPadding","paddingLeft","paddingRight","offsetParent","diff","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","colCount","hasValidCharSize","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","isWrapped","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","CONSTRUCTOR_ONLY_OPTIONS","_core","_addonManager","AddonManager","_publicOptions","getter","propName","setter","_checkReadonlyOptions","desc","defineProperty","includes","_checkProposedApi","allowProposedApi","onBell","onBinary","onData","_parser","ParserApi","UnicodeApi","_buffer","BufferNamespaceApi","m","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","applicationKeypad","insertMode","modes","originMode","origin","reverseWraparoundMode","reverseWraparound","sendFocusMode","wraparoundMode","wraparound","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","scrollPages","pageCount","scrollToTop","scrollToLine","callback","writeUtf8","writeln","getOption","setOption","loadAddon","addon","values","Infinity","isNaN","_container","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","code","bold","dim","italic","_canvas","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","onOptionsChanged","onGridChanged","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_fillCells","_fillMiddleLineAtCells","cellOffset","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","TEXT_BASELINE","_clipRow","drawSuccess","customGlyphs","tryDrawCustomChar","getChars","fillText","_drawChars","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","INVERTED_DEFAULT_COLOR","getBgColor","isFgDefault","getFgColor","DEFAULT_COLOR","drawBoldTextInBrightColors","isBold","WHITESPACE_CELL_CHAR","getCode","WHITESPACE_CELL_CODE","isDim","isItalic","draw","fgOverride","save","AttributeData","join","globalAlpha","DIM_OPACITY","restore","beginPath","clip","fontWeightBold","fontWeight","minimumContrastRatio","adjustedColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","inverse","BaseRenderLayer","BLINK_INTERVAL","container","rendererId","_onRequestRedraw","_coreBrowserService","_cell","CellData","_state","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","pause","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorHidden","viewportRelativeCursorY","loadCell","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","CursorRenderLayer","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","time","setInterval","blockElementDefinitions","w","h","patternCharacterDefinitions","boxDrawingDefinitions","xp","yp","xOffset","yOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","drawBlockElementChar","patternDefinition","patternSet","cachedPatterns","pattern","tmpCanvas","tmpCtx","imageData","ImageData","startsWith","substr","parseFloat","putImageData","createPattern","drawPatternChar","boxDrawingDefinition","entries","instructions","instruction","f","svgToCanvasInstructionMap","args","translateArgs","error","stroke","closePath","drawBoxDrawingChar","clamp","bezierCurveTo","lineTo","moveTo","cache","GridCache","onShowLinkUnderline","onHideLinkUnderline","middleRowCount","is256Color","LinkRenderLayer","nextRendererId","instantiationService","_id","_renderLayers","TextRenderLayer","SelectionRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","l","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","IInstantiationService","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_characterWidth","_characterFont","_characterOverlapCache","_workCell","terminalFont","_forEachCell","firstRow","lastRow","joinedRanges","getJoinedCharacters","isJoined","lastCharX","JoinedCellData","translateToString","_isOverlapping","getCodePoint","NULL_CELL_CODE","_drawBackground","prevFillStyle","nextFillStyle","isBgPalette","_drawForeground","isInvisible","isUnderline","isStrikethrough","beginFrame","hasOwnProperty","overlaps","measureText","_didWarmUp","_doWarmUp","BaseCharAtlas","charAtlasCache","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","colorCode","isLegacyEdge","CHAR_ATLAS_CELL_SPACING","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","_tmpCtx","_width","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","idx","_getBackgroundColor","_getForegroundColor","fontStyle","clearColor","offset","_addGlyphToBitmap","isSafari","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","NoneCharAtlas","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","nodePool","peekValue","head","TERMINAL_CLASS_PREFIX","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","isCursorRow","lineLength","charElement","display","_applyMinimumContrast","_addStyle","padStart","padChar","isSelectAllActive","selectionStartLength","areSelectionValuesReversed","startPlusLength","onTrim","SelectionModel","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","firstCell","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","getBg","getTrimmedLength","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","getRootNode","activeElement","hasFocus","_decorations","marker","isDisposed","decoration","Decoration","onDispose","_queueRefresh","shouldRecreate","render","_onDispose","_marker","anchor","_createElement","append","_refreshStyle","right","_renderer","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","_fullRefresh","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","changeOptions","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","_onTrim","_onBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","last","createDecorator","IDecorationService","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","len","bytes","Uint8Array","charCodeAt","dataURI","_maxLength","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","Array","_startIndex","_length","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","CircularList","clone","val","depth","clonedObject","isArray","hasWriteSyncWarnHappened","_onBinary","_onData","_onLineFeed","InstantiationService","OptionsService","BufferService","LogService","CoreService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","unicodeService","UnicodeService","_charsetService","CharsetService","ICharsetService","InputHandler","markRangeDirty","scrollBottom","_writeBuffer","WriteBuffer","promiseResult","parse","_onScrollApi","_windowsMode","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","params","put","concat","subarray","unhook","success","utf32ToString","pt","_coreMouseService","EscapeSequenceParser","_parseBuffer","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","setCsiHandlerFallback","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","DECRQSS","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","wasPaused","DEBUG","prototype","clearRange","decode","chWidth","charset","curAttr","bufferRow","markDirty","setCellFromCodePoint","extended","wcwidth","ch","stringFromCodePoint","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","convertEol","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","fill","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","underlineStyle","updateExtended","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","spec","parseColor","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","markAllDirty","_disposables","d","unregister","disposables","array","isNode","navigator","userAgent","platform","test","isIpad","isIphone","fillFallback","constructor","lastChar","CHAR_DATA_CODE_INDEX","ExtendedAttrs","newObj","isBlink","isFgPalette","isAttributeDefault","hasExtendedAttrs","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_cols","_rows","_getCorrectBufferLength","getWhitespaceCell","BufferLine","maxLength","relativeY","correctBufferLength","fillViewportRows","fillAttr","newCols","newRows","nullCell","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","trimmedLines","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","onInsert","onDelete","_removeMarker","startOverscan","endOverscan","BufferStringIterator","Buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","keys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_normal","_alt","inactiveBuffer","BufferSet","obj","combined","DEFAULT_ATTR","_nextId","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","DEL","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","codepoint","_interim","startPos","interim","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","table","BMP_COMBINING","HIGH_COMBINING","version","num","ucs","mid","bisearch","UnicodeV6","qmt","queueMicrotask","cb","resolve","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","chunk","_innerWrite","lastTime","startTime","RGB_REX","HASH_REX","pad","bits","s2","low","toLowerCase","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","handlerResult","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","setDefault","addMany","codes","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_start","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","k","newParams","getSubParamsAll","store","cur","_addons","instance","terminal","loadedAddon","_wrappedAddonDispose","init","getLine","BufferLineApiView","BufferApiView","_line","getCell","_onBufferChange","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","isFull","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","name","protocol","encoding","_compareEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","disableStdin","_end","_entries","service","ServiceCollection","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","altClickMovesCursor","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","newValue","_sanitizeAndValidateOption","_setupOptions","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","defaultProvider","_activeProvider","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}